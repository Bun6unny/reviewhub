{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row row-cols-1 row-cols-md-3 g-4\"\n};\nconst _hoisted_2 = {\n  class: \"card\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"card-title\"\n};\nconst _hoisted_6 = {\n  class: \"card-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.news, (newsItem, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"col\"\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n      src: newsItem.image,\n      class: \"card-img-top\",\n      alt: \"...\"\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h5\", _hoisted_5, _toDisplayString(newsItem.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(newsItem.description), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_Fragment","_renderList","$data","news","newsItem","index","key","_hoisted_2","src","image","alt","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","title","_hoisted_6","description"],"sources":["C:\\Users\\hodyr\\Desktop\\dz\\reviewhub\\reviewhub\\src\\views\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n      <div v-for=\"(newsItem, index) in news\" :key=\"index\" class=\"col\">\r\n        <div class=\"card\">\r\n          <img :src=\"newsItem.image\" class=\"card-img-top\" alt=\"...\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{ newsItem.title }}</h5>\r\n            <p class=\"card-text\">{{ newsItem.description }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      news: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadNews();\r\n  },\r\n  methods: {\r\n    loadNews() {\r\n      fetch('assets/main.txt')\r\n        .then(response => response.text())\r\n        .then(data => {\r\n          this.news = this.parseNews(data);\r\n        });\r\n    },\r\n    parseNews(data) {\r\n      const newsItems = [];\r\n      const lines = data.split('\\n');\r\n      let currentNews = {};\r\n\r\n      lines.forEach(line => {\r\n        if (line.startsWith('Title:')) {\r\n          if (currentNews.title) {\r\n            newsItems.push(currentNews);\r\n          }\r\n          currentNews = { title: line.replace('Title:', '').trim() };\r\n        } else if (line.startsWith('Image:')) {\r\n          currentNews.image = line.replace('Image:', '').trim();\r\n        } else if (line.startsWith('Description:')) {\r\n          currentNews.description = line.replace('Description:', '').trim();\r\n        }\r\n      });\r\n      if (currentNews.title) {\r\n        newsItems.push(currentNews);\r\n      }\r\n      return newsItems;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EAESA,KAAK,EAAC;AAAkC;;EAEpCA,KAAK,EAAC;AAAM;mBAJzB;;EAMeA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAW;;uBAP9BC,mBAAA,CAYM,cAXJC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJF,mBAAA,CAQMG,SAAA,QAXZC,WAAA,CAGuCC,KAAA,CAAAC,IAAI,EAH3C,CAGmBC,QAAQ,EAAEC,KAAK;yBAA5BR,mBAAA,CAQM;MARkCS,GAAG,EAAED,KAAK;MAAET,KAAK,EAAC;QACxDE,mBAAA,CAMM,OANNS,UAMM,GALJT,mBAAA,CAA0D;MAApDU,GAAG,EAAEJ,QAAQ,CAACK,KAAK;MAAEb,KAAK,EAAC,cAAc;MAACc,GAAG,EAAC;4BAL9DC,UAAA,GAMUb,mBAAA,CAGM,OAHNc,UAGM,GAFJd,mBAAA,CAAgD,MAAhDe,UAAgD,EAAAC,gBAAA,CAAtBV,QAAQ,CAACW,KAAK,kBACxCjB,mBAAA,CAAmD,KAAnDkB,UAAmD,EAAAF,gBAAA,CAA3BV,QAAQ,CAACa,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}